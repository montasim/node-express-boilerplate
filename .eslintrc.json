{
  "env": {
    // Defines the environments your code is expected to run in.
    "es2022": true, // Supports ES2022 global variables.
    "node": true,   // Supports Node.js global variables and Node.js scoping.
    "jest": true    // Adds Jest testing global variables.
  },
  "extends": [
    // Extends configurations from eslint and various plugins.
    "eslint:recommended", // Starts with a base of recommended rules by ESLint.
    "plugin:node/recommended-module", // Enforces Node.js best practices and module usage.
    "plugin:promise/recommended", // Applies best practices for JavaScript promises.
    "plugin:jest/recommended", // Uses recommended settings for Jest.
    "prettier" // Disables ESLint rules that might conflict with Prettier.
  ],
  "parserOptions": {
    // Configures the parser for modern ECMAScript features.
    "ecmaVersion": 2022, // Parses modern ECMAScript syntax.
    "sourceType": "module" // Allows for the use of import/export syntax.
  },
  "plugins": [
    // Includes plugins for additional rules.
    "promise", // For promise rules.
    "prettier" // Integrates Prettier for code formatting.
  ],
  "rules": {
    // Custom rule configurations.
    "indent": ["error", 4, { "SwitchCase": 1 }], // Enforces a 4-space indentation, including switch cases.
    "linebreak-style": ["error", "windows"], // Enforces Windows linebreaks (CRLF).
    "quotes": ["error", "single", { "avoidEscape": true }], // Enforces single quotes, allowing escape.
    "semi": ["error", "always"], // Requires semicolons at the end of statements.
    "no-unused-vars": ["warn", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }], // Warns on unused variables, except those starting with an underscore.
    "no-console": "off", // Allows the use of console statements.
    // Node.js specific rules for managing imports and ensuring compatibility.
    "node/no-missing-import": ["error", {
      "allowModules": [],
      "resolvePaths": ["./src"],
      "tryExtensions": [".js", ".json", ".node"]
    }],
    "node/no-unsupported-features/es-syntax": "off", // Turns off warnings for unsupported ECMAScript features not yet adopted by Node.js.
    "node/no-unpublished-import": "off", // Turns off warnings for importing modules that are not published.
    "node/no-extraneous-import": "off", // Allows importing packages that are not listed in the project's dependencies.
    // Promise plugin rules to ensure proper handling and chaining of promises.
    "promise/catch-or-return": "error", // Ensures each promise includes a catch or return statement.
    "promise/always-return": "off", // Does not require promises to always return something.
    "promise/no-return-wrap": "error", // Disallows unnecessary wrapping of values in Promise.resolve.
    "promise/param-names": "error", // Enforces consistent naming of promise parameters.
    "promise/no-nesting": "warn", // Warns against nesting promises.
    "promise/no-promise-in-callback": "warn", // Warns against creating promises within callbacks.
    "promise/no-callback-in-promise": "warn", // Warns against using callbacks within promises.
    "promise/prefer-await-to-then": "warn", // Warns against using .then() when await is more appropriate.
    "promise/prefer-await-to-callbacks": "warn" // Warns against using callbacks when await is more appropriate.
  },
  "overrides": [
    {
      "files": ["*.test.js", "*.spec.js"], // Specific rules for test files.
      "rules": {
        "no-unused-expressions": "off" // Allows unused expressions in test files, useful for chai-like assertions.
      }
    }
  ],
  "settings": {
    // Configuration settings that affect how rules are applied.
    "node": {
      "tryExtensions": [".js", ".json", ".node", ".ts"] // Specifies file extensions to consider when resolving modules.
    }
  }
}
